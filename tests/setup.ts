import { chromium } from "@playwright/test";
import { LoginPage } from "../src/pages/LoginPage";
import { users } from "../src/fixtures/users";
import fs from "fs";
import dotenv from "dotenv";
dotenv.config({ path: "env_settings/.env.stage" });

export default async function globalSetup() {
  console.log("üîπ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏...");

  const browser = await chromium.launch();
  const context = await browser.newContext({
    ignoreHTTPSErrors: true,
  });

  const page = await context.newPage();
  const loginPage = new LoginPage(page);

  console.log("üîπ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...");
  await page.goto(`${process.env.AUTH_URL}`, { timeout: 60000 });
  await page.waitForLoadState("networkidle");

  console.log("üîπ –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...");
  await loginPage.login(users.testUser.username, users.testUser.password);
  console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");

  const storagePath = "tests/storageState.json";
  if (!fs.existsSync("tests")) {
    fs.mkdirSync("tests");
  }

  await context.storageState({ path: storagePath });

  console.log(`‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ ${storagePath}`);
  await browser.close();
}
